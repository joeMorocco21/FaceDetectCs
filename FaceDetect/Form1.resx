<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABdGwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAGw9JREFUeJztnQn0ZzV1x6+UXdYBS0GZkbVlWC3QspTFliMDijAtS6Eg
        WHYBbSkFbEsd2oIDIsxIQRaRRdEBpFAp7ViOPR5hQAGhZVdkt60VKAMqa6XNt3m/819/v5e8l+Qm730/
        53zPYZn55SZ5ue8lubkREfnfjukUISQOeLa0n+/QUjeADoCUAh1AAaIDILGgAyhAdAAkFnQABYgOgMSC
        DqAA0QGQWNABFCA6ABILOoACRAdAYtFLB0AIKRc6AEJ6DB0AIT2GDoCQHkMHQEiPoQMgpMfQARDSY+gA
        COkxdACE9Bg6AEJ6DB0AmcAjNSLdgg6ATID93S/oAMgE2N/9gg6ATID93S/oAMgE2N/9gg4gIatqG+BA
        6f1dQhvnBB1AApY1mmf0jNHauqbUUnJ/r2n0pNFCo+WVbSkFOoDIrG90h4y1161G71C1aDSl9jfa9GYZ
        s/Meow1VLSoDOoCIfNjoRZnaZidrGlVDqf2NNp1s61KjAzSNKgA6gAjgk3++0dsyfZu9abSTmnWjKbG/
        tzd6Q4bbfKlwSjAMOoAILJb6dntK7Jw1N0rr7zXEtmWd3Yu1DMwcOoAI7C3D3/7jdYvktx5QWn/fKPU2
        oy/21TIwc+gAInGe1LcddJKWgUOYXaOc+Li4tfF5WgYWAB1AJLAOsETq2w/rATso2VgyWxm9JvXte7dw
        /j8KOoCIYAvwBalvwx8ara5kY4msYvSY1LfrS0YbKNlYCnQAkdlP6tcD8BWwj5aBBYK2QpvVzfvnahlY
        EHQACUBk2rD2e9ZoZz3TigVbf0/I8HZdoGdaUdABJGA5o7tkatt93WiGol2lg2nT9TK1Xe81WkHRrpKg
        A0jERmIj09Bmb4k9G7CMpkEdAduon5CxQKBXjDZVtags6AASsr/R00Y7KtvRRbYVu5h6iLYhhUEHkJgV
        tQ3oMGxbf+gACOkxdACE9Bg6AEJ6DB0AmQDvBegXdACZg3Dib0i6gzg59PcmRt8UZvRJAR1AxiDkdZBR
        6CGjlROUqd3fWMm/vyqLGX3iQweQIYMkor+QiW19WYKytfv78knlIaafST7jQQeQGTON7pTh7X1o5PI1
        +/vAEeUivHejyOX3ETqAjJgj9gjrqPaOHeqq1d+o0ys1ZaNt5kS0oY/QAWTE5kY/l/o2f8BopUg2aPQ3
        Du7c51A2EoBsHcmGvkIHkBlHSX2bQxdFKl+jvy92KBc6MlL5fYYOIEOuEbcBEePgS+r+3t+hTGhRhLIJ
        HUCWIOXVo1Lf9jHWA1L29/gj0qP0uNFqgcsmli1rRAegBOa6LkkvbwpcbsqswLC9rn6c9ytDB6DH8TK6
        7ZFRaC0169qDjD43yOg6HqdmHfl/6AB0uVamtnmXMgpNzugzXtcr2kUqTq0RicvkFNi4YjzXewXbsJ3Y
        jD6DejJVOiEVg0swcP11l5OIYqEPq/2vi03xRQip2ErbgIT0qa6EEEIIIYQQQgghhBBCCCGEEEIIIYQQ
        QgghhBBCCCGEEEIIIYQQQgghpOcgzdYGYlNwfUDs7bsHGR1T6WNGp1U6o9Lg308Y9+cOrv7unkbbi03x
        vUbCehBCxoGBjTzuHxI7UM8x+qrRErE5BX9i9D/idglHG+FG4+erMpdUNpxrdKLY6863FOb6I6QRyKCL
        tzcGOd7IuEHoe+J2uUZuWlrZ/qWqLqjThlUdCek9y4lNjIm3+RVGdxv9VPQHbmz9zOgeoyvFfjVsV7UF
        IZ1mPbGfyPOMbhO3W4L7ojeN7jVaaPQRsbcoE1I064i93BNvuudEf5CVpueqtvuDqi0JyZqVjPYwmi/2
        bYbFMu1B1CU9YXSp2J0JXiRKsmBtsXfa3ypuF31SYYSLRf7R6Cijd9X2EiEBwQOHeeotYueu2oOh78KX
        1h1i7x98z4h+I6Qxv2J0stFdRm+L/kNPTa+3qz46ueozQhqzvNFcsVd047beVA8xvioeFHuH3uVSZgzA
        QEurOiyq6pTyi+mtqu9+t+pLQpzY2miB2Gi32A8p1g3urMrDjsEWYvfE32n010avJrAhtlCHv6rqtFxV
        R9QVW354W7+ewIbnq/LeJ4RMA1bwsZh3n8R9EP/D6FqxwT+Ir58uAGY3sSve2gM3tJ6o6jaZ5aq2QJt8
        pWqjmHbcb3S02D4nPefdRmdLvLf9j8V+/h5n9Ks1tuCBxFuqy9uHqNsCqR98v1a12aKqDWPY8oLRp43W
        r7GFdBCE4CLOPvScFA84YgAQC/Bb4h73PlNsKLD2AE0lvIU3cmwbgMhAnCdABGXo9Rj0GXZ09vCwhxTI
        Mka/J+EHGkJ6bzA63OiXG9iF8OCXAttUgv5b7AEhX9DGRxh9TcKvkcB5I9BomQZ2kUxBZ2KQ4WRaqAcF
        i3d4ayAeYNUWtp0k3f7krxOOL5/Qov0wlUDf4mvuZwHtelhs3/5SC9uIMug8rDajM0M9rLdUv7lKS9sw
        NTg3kF1d0Hxpf0wYjhjnBhCVGSovwqPVb9IRFAQ66zCxCStCPAT4Hcw/1wtkHx70SwLZ1iV9XsLlCsDi
        7ieNvh/INvzO4UbLBrKPRGIvo4ekfYdjXo8z+jsHtg8P+MUB7Ouq/lbCJgzBb2Ex9koJs16Ar8m9A9pH
        AoHgHawQt+3gp4z+1GhGJDvPD2Bj1/WZxq07mrWMTjV6OoCNeNa2iWQn8QCf5Tgi2nbOh8MkWP2N+Yl3
        bEsb+6QTG7axC1gUxpYf1nPanOvA4u31RrMi2kqGgLDSM6VdVh04DSS03CqBvftImoSdXRHa6oONWtoP
        vMUXSbu+wTOIUOeVE9hLxM7BnpLmHfaG2G2jusi8UGwsZR/o0RJiI3yChdqARKyIwmyT0+FHYg8ekUjg
        cx+fXE07CItAF4hdIU7FimKj3rQHU6lC7MYK3q3eHOQTQKhyG0eAZzTUjhERO2fDZRZN36II98W2W8qB
        P+CiBvZSE/U571ZvDxwB1paahorjWUWAEyMKW4L5OY6MNumEwSLNJsmttuwuTB4SQmhDrTj9WdJukRmn
        S7dPbnUHwGo8rqxq6oGRL26L5FaPgQWhH05jF9VMj4vuIhtuO1o8jV0uwuGlTwmDiJzBG/s70qyxEbWX
        Q6AGjplqD5qu6WyvHogDDi81jS7EM71pepPLAgcwmtyOgxVjhOumXDAaBlaUmSE4vLB7k2pXYBRIYIIE
        pE1OcL5a/V1ejzaJdcV+tvs2KOaHX5C8UkO32amgRuurHv0QGxxL/qI0W+fBs75uepPzZD9plpEHJ7V2
        VbB3FEg0woW/eELb5haCu7s0O3iGZ36/9ObmAxZF5on/gMHCII6P5vC5P5kbRX+QdF3XO/dGOjAtwBTU
        N8Epnv2F0sPLUZGz/Vvi3/nfFpsvLkdmS7+Te6QS2jjXZ2AzsedKfOv0LenRPQa7iH/mVyyqnSJ5B1Zg
        v1h7cPRFn3fsEw2QjwKnDn2/BjAmdlGwNxlY+cSNLb5JHRFKq7mn7wKy0TTZvUgtbGFdbXS60aFiLz6Z
        W/3zJ6v/94MM7KzTy9I+K1NsEDvwr+JXL4wNjJHO7RLg9B4SZ/o0BqKvzpIybnXJ+agvBjQG/EyP+swS
        6xAez8D+YTrKoz5a4NlF/IJvJCHGyjsV7I0CDkYg26pPAzwrNpNLKeB2H+0BMVmIRDxI2uWzw9892OjJ
        DOozWbe3qFdq8Gn/nPjVD2Om+K1CxPJjMPtU/B/EZm8pBRwyymnrD4tkeOusGLCOyL47X/Ja5IQtJQ0Q
        XCXvG+uCsZMiX0UU5hi9Iu6VxfwH6bhKm//g1Jf2YBgIufZjHpzZU/K6w+D4iHWNAZ5tTMd81sEwhuZo
        GNsGdIxPJeHpdlKxtD3fEP2BAGEVOcVi6VYS//4+Vy2OXNdYYHrrMyXAWCrC2WGb7rPi14nY229yo04O
        YJEn5IUUTfWipN0pwQp3Dl8CaPtSg2jWEf+YAYytbLfCEdn3ZfGrEBJ1lLDKPwykDdceBJgL/07sik7D
        npLHmsCOsSsaETz7l4tffXG7dHZHixGWe5O4VwLhvEV80tSArTLtAXCWp8342sJV6Eh9tajSguq/+X6J
        naNY74FO87Q5R7CO5JP7AmMtm1B4JGrwmQfjEMRuKpaGR/vkH/bpXVf7Eap8s4x+a2O/Gg/XZo6/id0B
        7S3CnE4ItuH9Yq8sd633P0sGsQKriZ3DuxqNvWmtFF0xwIlEzYf/QEc7EZrqE4wy2JFx4RDlNnjY0c4S
        QMKQJ8S97oiFWF3FUrF79T5XbX9Xyl3smw68eTVz/SOs1yXIp80ZhUscfh82aEYMwlll8zkcACwO3iPu
        9UfAUPK4GRj5gIeRuIVF/XMlMPhM1nroIZe57+kByvkTh3L+TLktUt3xkAqMFQTEudb/QUl4mhBvcZ8L
        OPEGym7VMgAIuNF86Oti+3Fk1vfg1XTCV87smrI2UG6L366xr0QwZnx2CDAVWie2UUi95fPmPye2QYoc
        IXoP/GMO9v19wPL+zqE8zSzIhznYVyq4dsy1HbAmFe1LALHM/+ZhzKdiGZIJIT6vm+rKGtvwJgi5R4/f
        qnuwrlZsj1NrbCsdjCXXtsALOniOzDXE70TfX4Q2IEN8PHNo1c3/j4pQ5h/WlKm5DjCvxrYugF0Z10Nn
        eFGvHargGWJvOHEpGAbGvNo5J3CPvdYDf2iNbQsjlHlBTZmHKbbHuTW2dQUEDLk6ASTSmdG2wDXFXtDo
        OviPbltgQVwoeg/8vjW2+SZfcdF1NWXuq9geF9bY1iXwdec6vcPYXbNNYZhLPuxYGIyiA8jDAVwXocxF
        NWXSAaTBxwE8IgF2BnycAKcAaVQ3BVgQoczza8rkFCA+GFuuUwAM/mA7Atj7f9CxYOiMUAVnjOYi4Ok1
        th0ZocyP1pT554rtMa/Gti6AnQ7X9sA28XqhDfD5EuhDp2huA15VYxscdsgwZfxW3dbSNYrt0fVtwDPF
        vS2Cvvkn4/slgM/k0lJ8uXK46D3w33ew7+aA5d3oUJ7PIZbQqpsSlQrGznni3g5R3vyTwZfAIx5GIZyR
        ocDhNavGPsTHhwgFxm/UHQ/eULktuhoKjItvXdsgahTgZOAEfL4EbhUeBgqtunUA4DNvHKaTHcrRnP9D
        XTsMhEtPfDII42xO8qvFcATR59gi/mz0wwoJ0T4OjAs/XI4DX9KiDJcruGCD5jkAZNLp0nFgDGSfqFv8
        2WBRf774JgTBPHFTFUvjoJ0Q5Pcd7cS9ij7TAfxZl2PA4FDlNnjI0c4SwJeMT4Yl1YQgA3xTgiHt0e4a
        hkZAOyUYHOpKjrbieDBO9Y36asH/w4Kf6yc1+v5p5TboSkowrGP4pATDmFtZxdJpaJIU9AQVS8OSQ1LQ
        T3vajO08HOxBbP91lfDPHxX/U2SawVADdWEL8CTx+0LLKinogCZpwS+TstOC4zIT7QGAsNAPxK7oNOwl
        eaQF3yF2RSOCQXyF+NX3S5LxrhouLfDZt4RwOUKpi4O5XAyCSzq2jFzX8WxttDRCPXyFK9lLvRgEi32+
        l8riiyvbi0HGc5z4fdLgmqSSbgMeT05Xg6VwAhj8/6lQv+n0T5HrGotdjX4k7vXEWDpWxdIW4OaYl8Wv
        ktjbLi1yMLfLQWNOB/DZn8Obf6DjItY1Bnh7I3GKz8sRY2hPDWNDgDfSM+LXqQiAUNvXbABCL3OYCw8E
        W5CL0XV3wAWsNuPzM7dr0JMHv7QAC6y4zNSnjhg7Kad2UcAd7j4BQxCmBLtoGNuQJaI/ICYL+8m4tMMl
        WGgY+LvY5386g/pM1rdb1Cs1vp/8EO7cKMnBjQRhwL5JKrAnjS2uEnYJjhH9ATFMuLQDn50beNQHsf0I
        79WM8KtTXY7CHMAq/3zxjxjFWMlmjz8kfyR+lyBCSHC4lYaxHqxq9IroDwoXZ4Bju4hfQAKP/SodVv03
        /L+cB/1AWIfI/WwJFkt9UuhDGBuf0DA2JbhS+9/Fr2HeELtA2OZzNjZtruCi/HSRY59ogGcUzhTPrE+d
        MEXYWcFeFbDv/y/i3/HYN91cwV4XcDowp8XArgqf07meJ9nC6C7xr9M3pVv3ZjoBTzlP/AcNPpOQ9jrH
        T8Cvif4A6brqkpNqgJOh88T/rY9dFTzLpQYzBWEfo5+I/4OA47DvV7B3FL8ueW2VdU1o29zWg3CIp8nt
        yP9l9CEFe7MEUwKf21DHPxBXSl6hxDFSclNWX/Hoh9jgmbtKmjn8r0tez2w2fERsfLdvgyIef57YTzFt
        1jf6uegPlq7pNalPg5YCfK5jpb5JROSr1d8tLdo1KRtLs4UUCJ9idZdmpADxC9oDpms6y6sH4oBnq8nn
        PoQF7I3Tm1wmOO6IuwV8YwYGus1om+RWj4EgjqYPCjVVPxDdwBg8S7dNY5eL8Azjstxsj/DmDBZ8fI9M
        DoS5GTL2aG0ZIVcAtwXbC224q2fbh+K9YuM7muZ+RL6+7VIb3TVwgup4sWfem3QCTl4hNfn6qQ03fK6B
        vdRELfBu9fbgWcEz0zStOp5VnFQs4ux+KeBQEfaAmz5IWETCnmtKR4BFSdfblampwiGylKmv8GzgGXmt
        hc3YqejMIZ4cwd4/bkBp2kGYkyHmve6yi1DMMnqxhb19Fd6iGzZo7yagnLYDHwla5ySyt/dgQegvpdmW
        4UCYW94gNngnNh8U3TsEShM+vfdq1NJ+oO/xDLRZq8EziEW+kPkXiCNIHALP3XZwYbEGMQgxV2qPbmlj
        nxQzYzTm5Yg+xap+m6hNOA18Sa4b0VbiCLKmhMjNhwwsOHUYKyPRuQFs7Lp805y7gj7FKb1nA9iIXIRb
        RLKTtAC503zuLBwmzAWvErv9FDJqC791YQD7uqqFEr69dzO6WtrN7wdCbgqNFOzEg0Eaq1DXdiGgB9lx
        3hPIPjyUFweyrUu6SMINfqzmY14eKrkJbsNum16NJAZzvYPF3h0X4iHAOgM+/ZA9Z7WWtuFBZ7jwmM6W
        9oMfd+RhHQdTwVABWPiaPEi4n180eLCw6BNyP/51o1vEPnBtnMGR0jzYpAuCU/1Yi/bDyjv6FotxIQ9g
        YeCjb/nG7xBwBHONvithH2Kc8MKFmrhbr8kRz72ln3ECqHOTfXME2SAhKC46fTWwTTiEhhyJPK3XcbYV
        +9ZoetholB4WmwkWNx25fjrOlPCOKWfdJ35BPkgDd5rYa+RCn6/AM4AzI73Jx0fGeLfYY6bPS5wHHZmO
        EGiCz9zZNbYgbPh86fYBItTtPKnP24C2QiwAUqzF7Ju/EXuxC+k5eCAxH48dt4879XCf/YlGvyHT33mA
        C1FKSM3tK+ymTHf/I2L9f1PsFdk46/HjyHagjzGFyCF5DMkQ5HO/QJrlKfQVFhO/I/bUILYucfwZTgGh
        zmdK+DmuhlCHeVWdlq/qiJ0UxENg2uObSLOJkH/vfMkvnyDJGKR+woLQzRJnrWCYUBa2LvE2vEzyuozT
        V0urOiyq6pS6HW8Sm8Wn11l3SXuQsx23GsVYhKLCCX1zu9i8e++aticJaQliyrFHjDiAlG80anohlgCO
        GYOeC3okKWuJ3f+HM+jCfL0Uoa2RWvsIoxl1nURICnCUGKvciAHA8WJOFcIKCTdwWGgP4Qo+KQDMQRFH
        /gWjp0R/AJWmJ8Xm5TtQ4h3PJiQZSByBuPV5YpNR8PKQMeFiF8zj8YbH+sp7G7UwIQWBKcP7xEYJ4isB
        8QAvi/5gjK2Xq7qizsdXbcCc+YRUzBJ7SOYUoy8a3W30gugPXF8hhBeBPldUdUGdZgZsJ0J6Ba5DR4w8
        kmUi5zzO0H9Z7KczElYghDbFtuSbVVko8/bKBthybGXbbMnz6nZCesGqYr8i8GmNFfMDKuGswzFiB+pp
        lc6oNPj3Y6s/c+S4v7dH9Vuzqt8mhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
        IaQX9Oneuj7VlZBaMCBeE3sP4ZrKtsRkNbH3BCKt2A7KthCSBasYPSZjOfeeMdpJ1aI4bCcTrz3HP6+u
        ahEhGXCtTE28+ZbY+wOW0TMrGO8Qe2/fdNeA36BoFyHqIC/+qAy8uP9uLTXr2oM3PAb5qDoep2YdIYps
        LXbeX5eG+6bA5c6uUUhge1390AbbBC6XeLBFjUh4MO9/VOoHxytGmwYuu67MkGxotNShzMfFLhCS8NSO
        75QPBLFcI26XcBwSoezU/b2/Q5nQdRHKJg79TQeQlqPEbUBcFKl8jf6+2KFc6MhI5fcZOoCM2FzcbgV+
        wGilSDZo9PcKRt9zKBvrAVtHsqGv0AFkBC7IfElGt3eMef94tPp7E7F1G1U22mZORBv6CB1AZuCG3Dtl
        eHsfGrl8zf4+cES59xptFLn8PkIHkCHLig30+YVMbOvLEpSt3d+XTyrvbaOFRssnKLuP0AFkzD5GL4pt
        5weNVk5QpnZ/r2h0f1UWtggPSFBmn6EDyBxMCW4z2ixReTn0N+qKOs9MVF6foQMgE3ikRqRb0AEQ0mPo
        AAjpMXQAhPQYOoDErKhtQIdh2/pDB5AQHHx52mhHZTu6yLZiswjFOCDVZegAEoEotsHR1y5l9MmBY2Qs
        o9BPJW6odNegA0jAckZ3ydS2Q0afGYp2lQ4yCl0vU9sVYcMrKNpVEnQACUAo67D2e9ZoZz3TimV7oydk
        eLsu1DOtKOgAIjNXbDz7qDZEGux9tAwsELQV2mxUm6LN52oZWBB0ABFZ3+gFqW9DpsD2Y3Kq9GHC8eEN
        lGwsBTqASGDev0Tq2+91sSvYxI/BZSl17Xu38CThKOgAIvFZqW876CQtA4eQMitwWz4ubm38GS0DC4AO
        IAJ7S/28H7pF7MUYOVFaf98o9TajL/bVMjBz6AAisFjq2+0pozW0DBxBaf2NNkRb1tm9WMvAzKEDiAAy
        +syX4V8BWMHONRqwxP7GluB0V4sNdKkwLmAYdAAR+bCMZfQZrz/WNKqGUvv7ZJlq68vCjEJ10AFEBluB
        d8hYe90q+c37x1Nqf6NNcX36wM57xN48REZDB5CAQZJPXO29tq4ptZTc32saPSlMIuoDHUBCVtU2wIHS
        +7uENs4JOgAyAfZ3v6ADIBNgf/cLOgAyAfZ3v6ADIBNgf/cLOgAyAd4L0C/oAAjpMXQAhPQYOgBCegwd
        ACE9hg6AkB5DB0BIj6EDIKTH0AEQ0mPoAAjpMXQAhPSY1g6gNJ0SpNkImQqeLe3nO7TUDaADIKVAB1CA
        6ABILOgAChAdAIkFHUABogMgsaADKEB0ACQWdAAFiA6AxIIOoADRAZBYdM4B/B81WY+1JqY8OAAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>